{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Button/Button.module.scss","components/Notice/Notice.module.scss","components/ErrorNotice/ErrorNotice.module.scss","components/Searchbar/Searchbar.module.scss","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Notice/Notice.jsx","components/ErrorNotice/ErrorNotice.jsx","components/Modal/Modal.jsx","services/imagesApi.js","App.js","index.js","components/Modal/Modal.module.scss"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","event","preventDefault","type","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","url","tags","largeImageURL","src","alt","ImageGalleryItem__image","data-large-image","ImageGallery","images","onClick","map","id","webformatURL","Button","shouldRenderBtn","onButtonClick","loader","css","randomColor","Math","random","toString","substring","Loader","loading","color","setColor","useEffect","Notice","notice","ErrorNotice","error","message","modalRoot","document","querySelector","Modal","largeImageUrl","largeImageAlt","onClose","onEscHandler","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","ModalImg","axios","defaults","baseURL","searchQuery","currentPage","pageSize","get","then","responce","data","App","setImages","setCurrentPage","setSearchQuery","setLoading","setNotice","renderBtn","setRenderBtn","setError","showModal","setShowModal","setLargeImageUrl","setLargeImageAlt","options","imagesApi","hits","totalHits","length","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","fetchImages","nodeName","dataset","largeImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4246f7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2m5_t\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__1Lexl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__bav-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__AMJrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"Notice_Notice__3A74j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorNotice\":\"ErrorNotice_ErrorNotice__oDyyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1TXUo\",\"SearchForm\":\"Searchbar_SearchForm__3aG9-\",\"SearchForm__button\":\"Searchbar_SearchForm__button__Xt5FP\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__2LBQU\",\"SearchForm__input\":\"Searchbar_SearchForm__input__wcUUC\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.scss';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n\n    setQuery(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleFormSubmit}>\n        <button type=\"submit\" className={styles.SearchForm__button}>\n          <span className={styles.SearchForm__button__label}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryItem.module.scss';\n\nconst ImageGalleryItem = ({ url, tags, largeImageURL }) => (\n  <li className={styles.ImageGalleryItem}>\n    <img\n      src={url}\n      alt={tags}\n      className={styles.ImageGalleryItem__image}\n      data-large-image={largeImageURL}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from 'components/ImageGalleryItem';\n\nimport styles from './ImageGallery.module.scss';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className={styles.ImageGallery} onClick={onClick}>\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        url={webformatURL}\n        tags={tags}\n        largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import styles from './Button.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ shouldRenderBtn, onButtonClick }) => {\n  return (\n    shouldRenderBtn && (\n      <button className={styles.Button} type=\"button\" onClick={onButtonClick}>\n        Load more\n      </button>\n    )\n  );\n};\n\nButton.propTypes = {\n  shouldRenderBtn: PropTypes.bool.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RingLoader from 'react-spinners/RingLoader';\nimport { css } from '@emotion/core';\n\nconst loader = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst randomColor = () =>\n  '#' + (Math.random().toString(16) + '000000').substring(2, 8);\n\nconst Loader = ({ loading }) => {\n  const [color, setColor] = useState(randomColor());\n\n  useEffect(() => setColor(randomColor()), [loading]);\n\n  return loading && <RingLoader color={color} css={loader} />;\n};\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nimport styles from './Notice.module.scss';\n\nconst Notice = ({ notice }) =>\n  notice && <p className={styles.Notice}>{notice}</p>;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n\nexport default Notice;\n","import PropTypes from 'prop-types';\n\nimport styles from './ErrorNotice.module.scss';\n\nconst ErrorNotice = ({ error }) =>\n  error && <p className={styles.ErrorNotice}>{error.message}</p>;\n\nErrorNotice.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default ErrorNotice;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ largeImageUrl, largeImageAlt, onClose }) => {\n  useEffect(() => {\n    const onEscHandler = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', onEscHandler);\n\n    return () => {\n      window.removeEventListener('keydown', onEscHandler);\n    };\n  }, [onClose]);\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleOverlayClick}>\n      <div className={styles.Modal}>\n        <img\n          className={styles.ModalImg}\n          src={largeImageUrl}\n          alt={largeImageAlt}\n        />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  largeImageUrl: PropTypes.string,\n  largeImageAlt: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst API_KEY = '19750317-f167cae8029dbba7a5b9e2fed';\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst fetchGetImages = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) =>\n  axios\n    .get(\n      `/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\n    )\n    .then(responce => responce.data);\n\nexport default { fetchGetImages };\n","import { useState, useEffect } from 'react';\n\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Loader from 'components/Loader';\nimport Notice from 'components/Notice';\nimport ErrorNotice from 'components/ErrorNotice';\nimport Modal from 'components/Modal';\n\nimport imagesApi from 'services/imagesApi';\n\nimport './App.scss';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notice, setNotice] = useState('');\n  const [renderBtn, setRenderBtn] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageUrl, setLargeImageUrl] = useState('');\n  const [largeImageAlt, setLargeImageAlt] = useState('');\n\n  const pageSize = 12;\n\n  useEffect(() => {\n    const fetchImages = () => {\n      const options = { searchQuery, currentPage, pageSize };\n\n      setLoading(true);\n\n      imagesApi\n        .fetchGetImages(options)\n        .then(({ hits, totalHits }) => {\n          if (totalHits === 0) {\n            setNotice(`Images with '${searchQuery}' not found!`);\n            return;\n          }\n\n          if (totalHits <= pageSize || hits.length < pageSize) {\n            setRenderBtn(false);\n          }\n\n          setImages(prev => [...prev, ...hits]);\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => setError(error))\n        .finally(() => setLoading(false));\n    };\n\n    searchQuery ? fetchImages() : setImages([]);\n  }, [currentPage, searchQuery]);\n\n  const handleButtonLoadMoreClick = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n\n  const handleChangeValue = query => {\n    if (searchQuery !== query) {\n      setNotice('');\n      setRenderBtn(true);\n      setError(null);\n      setSearchQuery(query);\n      setCurrentPage(1);\n      setImages([]);\n    }\n  };\n\n  const handleModal = event => {\n    if (event.target.nodeName !== 'IMG') {\n      return;\n    }\n\n    setLargeImageUrl(event.target.dataset.largeImage);\n    setLargeImageAlt(event.target.alt);\n\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const shouldRenderBtn = images.length > 0 && renderBtn && !loading;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleChangeValue} />\n      <ErrorNotice error={error} />\n      <Notice notice={notice} />\n      <ImageGallery images={images} onClick={handleModal} />\n\n      {showModal && (\n        <Modal\n          largeImageUrl={largeImageUrl}\n          largeImageAlt={largeImageAlt}\n          onClose={closeModal}\n        />\n      )}\n\n      <Loader loading={loading} />\n      <Button\n        onButtonClick={handleButtonLoadMoreClick}\n        shouldRenderBtn={shouldRenderBtn}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__149oL\",\"Modal\":\"Modal_Modal__1IdTq\",\"ModalImg\":\"Modal_ModalImg__3V03n\"};"],"sourceRoot":""}